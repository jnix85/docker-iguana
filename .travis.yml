os: linux
language: shell

branches:
  only:
    - master
    - /^production-[0-9]+/

env:
  global:
    # the repository name on Docker Hub
    - DOCKERHUB_REPO=iguanaproject/iguana

# stage order
stages:
  - test
  - build

# workaround template for the build stage to support multiple parallel builds
_build_template: &_build_template
  stage: build
  language: shell
  services:
    - docker
  before_script:
    # login to Docker Hub
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    # build the image and push it to Docker Hub
    - docker build -t $DOCKERHUB_REPO:$DOCKER_TAG --build-arg VARIANT=$VARIANT --build-arg USE_NGINX=$USE_NGINX .
    - docker push $DOCKERHUB_REPO:$DOCKER_TAG

jobs:
  include:
    # first test the code
    - stage: test
      language: python
      python: "3.6"
      cache: pip
      addons:
        apt:
          packages:
          - libexempi3
        chrome: stable
      install:
        - make development
        # requirement for coveralls.io
        - pip install coveralls
      before_script:
        # install latest Chrome version
        - LATEST_CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"`
        - curl "https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O
        - unzip chromedriver_linux64.zip -d ~/bin
        # add the chromedriver binary to the PATH
        - export PATH=$PATH:`chromedriver-path`
      script:
        # run all tests
        make coverage +c
      # send coverage report to coveralls.io
      after_success:
        - pushd src
        - coveralls
        - popd

    # after that build the docker images
    - <<: *_build_template
      if: tag IS blank
      env:
        - VARIANT=development
        - USE_NGINX=false
        - DOCKER_TAG=develop
    - <<: *_build_template
      if: tag IS blank
      env:
        - VARIANT=staging
        - USE_NGINX=false
        - DOCKER_TAG=stage
    - <<: *_build_template
      if: tag IS blank
      env:
        - VARIANT=staging
        - USE_NGINX=true
        - DOCKER_TAG=stage_nginx
    - <<: *_build_template
      if: tag =~ ^production-[0-9]+
      env:
        - VARIANT=production
        - USE_NGINX=false
        - DOCKER_TAG=prod
    - <<: *_build_template
      if: tag =~ ^production-[0-9]+
      env:
        - VARIANT=production
        - USE_NGINX=true
        - DOCKER_TAG=prod_nginx
